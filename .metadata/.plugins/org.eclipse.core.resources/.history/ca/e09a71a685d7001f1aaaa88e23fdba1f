import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;

class Alumna {
    private static int codigoCorrelativo = 1;
    private int codigo;
    private String nombres;
    private String apellidos;
    private String dni;
    private int edad;
    private String celular;
    private int estado; // 0: registrado, 1: eliminado

    public Alumna(String nombres, String apellidos, String dni, int edad, String celular) {
        this.codigo = codigoCorrelativo++;
        this.nombres = nombres;
        this.apellidos = apellidos;
        this.dni = dni;
        this.edad = edad;
        this.celular = celular;
        this.estado = 0; // registrado
    }

    public int getCodigo() { return codigo; }
    public String getNombres() { return nombres; }
    public String getApellidos() { return apellidos; }
    public String getDni() { return dni; }
    public int getEdad() { return edad; }
    public String getCelular() { return celular; }
    public int getEstado() { return estado; }

    public void setNombres(String nombres) { this.nombres = nombres; }
    public void setApellidos(String apellidos) { this.apellidos = apellidos; }
    public void setEdad(int edad) { this.edad = edad; }
    public void setCelular(String celular) { this.celular = celular; }
    public void eliminar() { this.estado = 1; }
}

public class AlumnoFrame extends JFrame {
    private ArrayList<Alumno> alumnos;
    private JTextArea textArea;

    public AlumnoFrame() {
        alumnos = new ArrayList<>();
        setupUI();
    }

    private void setupUI() {
        setTitle("Gestión de Alumnos");
        setSize(500, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        textArea = new JTextArea();
        JScrollPane scrollPane = new JScrollPane(textArea);
        add(scrollPane, BorderLayout.CENTER);

        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(5, 2));
        
        // Componentes de adición de alumno
        JTextField nombresField = new JTextField();
        JTextField apellidosField = new JTextField();
        JTextField dniField = new JTextField();
        JTextField edadField = new JTextField();
        JTextField celularField = new JTextField();
        
        panel.add(new JLabel("Nombres:"));
        panel.add(nombresField);
        panel.add(new JLabel("Apellidos:"));
        panel.add(apellidosField);
        panel.add(new JLabel("DNI:"));
        panel.add(dniField);
        panel.add(new JLabel("Edad:"));
        panel.add(edadField);
        panel.add(new JLabel("Celular:"));
        panel.add(celularField);

        JButton addButton = new JButton("Adicionar");
        addButton.addActionListener(e -> {
            String nombres = nombresField.getText();
            String apellidos = apellidosField.getText();
            String dni = dniField.getText();
            int edad = Integer.parseInt(edadField.getText());
            String celular = celularField.getText();

            if (dniRepetido(dni)) {
                JOptionPane.showMessageDialog(this, "DNI ya existe. No se puede duplicar.");
            } else {
                Alumna nuevoAlumno = new Alumna(nombres, apellidos, dni, edad, celular);
                alumnos.add(nuevoAlumno);
                actualizarTextArea();
                limpiarCampos(nombresField, apellidosField, dniField, edadField, celularField);
            }
        });

        panel.add(addButton);
        add(panel, BorderLayout.NORTH);

        JButton consultarButton = new JButton("Consultar");
        consultarButton.addActionListener(e -> actualizarTextArea());
        add(consultarButton, BorderLayout.SOUTH);

        setVisible(true);
    }

    private void actualizarTextArea() {
        StringBuilder sb = new StringBuilder();
        for (Alumna a : alumnos) {
            if (a.getEstado() == 0) {
                sb.append("Código: ").append(a.getCodigo()).append(", Nombres: ").append(a.getNombres())
                  .append(", Apellidos: ").append(a.getApellidos()).append(", DNI: ").append(a.getDni())
                  .append(", Edad: ").append(a.getEdad()).append(", Celular: ").append(a.getCelular())
                  .append("\n");
            }
        }
        textArea.setText(sb.toString());
    }

    private boolean dniRepetido(String dni) {
        for (Alumno a : alumnos) {
            if (a.getDni().equals(dni)) {
                return true;
            }
        }
        return false;
    }

    private void limpiarCampos(JTextField... fields) {
        for (JTextField field : fields) {
            field.setText("");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(AlumnoFrame::new);
    }
}
